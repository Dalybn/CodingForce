/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)

GtkWidget*
create_liste_capteurs (void)
{
  GtkWidget *liste_capteurs;
  GtkWidget *fixed1;
  GtkWidget *treeview1;
  GtkWidget *retourL;
  GtkWidget *alignment1;
  GtkWidget *hbox1;
  GtkWidget *image1;
  GtkWidget *label2;
  GtkWidget *ajouterL;
  GtkWidget *alignment2;
  GtkWidget *hbox2;
  GtkWidget *image2;
  GtkWidget *label3;
  GtkWidget *modifierL;
  GtkWidget *alignment3;
  GtkWidget *hbox3;
  GtkWidget *image3;
  GtkWidget *label4;
  GtkWidget *rechercher;
  GtkWidget *alignment31;
  GtkWidget *hbox31;
  GtkWidget *image35;
  GtkWidget *label84;
  GtkWidget *label1;

  liste_capteurs = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (liste_capteurs), _("window1"));

  fixed1 = gtk_fixed_new ();
  gtk_widget_show (fixed1);
  gtk_container_add (GTK_CONTAINER (liste_capteurs), fixed1);

  treeview1 = gtk_tree_view_new ();
  gtk_widget_show (treeview1);
  gtk_fixed_put (GTK_FIXED (fixed1), treeview1, 104, 104);
  gtk_widget_set_size_request (treeview1, 544, 216);

  retourL = gtk_button_new ();
  gtk_widget_show (retourL);
  gtk_fixed_put (GTK_FIXED (fixed1), retourL, 24, 352);
  gtk_widget_set_size_request (retourL, 120, 30);

  alignment1 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment1);
  gtk_container_add (GTK_CONTAINER (retourL), alignment1);

  hbox1 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox1);
  gtk_container_add (GTK_CONTAINER (alignment1), hbox1);

  image1 = gtk_image_new_from_stock ("gtk-go-back", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image1);
  gtk_box_pack_start (GTK_BOX (hbox1), image1, FALSE, FALSE, 0);

  label2 = gtk_label_new_with_mnemonic (_("Retour"));
  gtk_widget_show (label2);
  gtk_box_pack_start (GTK_BOX (hbox1), label2, FALSE, FALSE, 0);

  ajouterL = gtk_button_new ();
  gtk_widget_show (ajouterL);
  gtk_fixed_put (GTK_FIXED (fixed1), ajouterL, 216, 352);
  gtk_widget_set_size_request (ajouterL, 120, 30);

  alignment2 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment2);
  gtk_container_add (GTK_CONTAINER (ajouterL), alignment2);

  hbox2 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox2);
  gtk_container_add (GTK_CONTAINER (alignment2), hbox2);

  image2 = gtk_image_new_from_stock ("gtk-add", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image2);
  gtk_box_pack_start (GTK_BOX (hbox2), image2, FALSE, FALSE, 0);

  label3 = gtk_label_new_with_mnemonic (_("Ajouter"));
  gtk_widget_show (label3);
  gtk_box_pack_start (GTK_BOX (hbox2), label3, FALSE, FALSE, 0);

  modifierL = gtk_button_new ();
  gtk_widget_show (modifierL);
  gtk_fixed_put (GTK_FIXED (fixed1), modifierL, 400, 352);
  gtk_widget_set_size_request (modifierL, 120, 30);

  alignment3 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment3);
  gtk_container_add (GTK_CONTAINER (modifierL), alignment3);

  hbox3 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox3);
  gtk_container_add (GTK_CONTAINER (alignment3), hbox3);

  image3 = gtk_image_new_from_stock ("gtk-edit", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image3);
  gtk_box_pack_start (GTK_BOX (hbox3), image3, FALSE, FALSE, 0);

  label4 = gtk_label_new_with_mnemonic (_("Modifier"));
  gtk_widget_show (label4);
  gtk_box_pack_start (GTK_BOX (hbox3), label4, FALSE, FALSE, 0);

  rechercher = gtk_button_new ();
  gtk_widget_show (rechercher);
  gtk_fixed_put (GTK_FIXED (fixed1), rechercher, 584, 351);
  gtk_widget_set_size_request (rechercher, 120, 30);

  alignment31 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment31);
  gtk_container_add (GTK_CONTAINER (rechercher), alignment31);

  hbox31 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox31);
  gtk_container_add (GTK_CONTAINER (alignment31), hbox31);

  image35 = gtk_image_new_from_stock ("gtk-find", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image35);
  gtk_box_pack_start (GTK_BOX (hbox31), image35, FALSE, FALSE, 0);

  label84 = gtk_label_new_with_mnemonic (_("Rechercher"));
  gtk_widget_show (label84);
  gtk_box_pack_start (GTK_BOX (hbox31), label84, FALSE, FALSE, 0);

  label1 = gtk_label_new (_("Liste des capteurs:"));
  gtk_widget_show (label1);
  gtk_fixed_put (GTK_FIXED (fixed1), label1, 120, 40);
  gtk_widget_set_size_request (label1, 368, 38);

  g_signal_connect ((gpointer) treeview1, "row_activated",
                    G_CALLBACK (on_treeview1_row_activated),
                    NULL);
  g_signal_connect ((gpointer) retourL, "clicked",
                    G_CALLBACK (on_retourL_clicked),
                    NULL);
  g_signal_connect ((gpointer) ajouterL, "clicked",
                    G_CALLBACK (on_ajouterL_clicked),
                    NULL);
  g_signal_connect ((gpointer) modifierL, "clicked",
                    G_CALLBACK (on_modifierL_clicked),
                    NULL);
  g_signal_connect ((gpointer) rechercher, "clicked",
                    G_CALLBACK (on_rechercher_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (liste_capteurs, liste_capteurs, "liste_capteurs");
  GLADE_HOOKUP_OBJECT (liste_capteurs, fixed1, "fixed1");
  GLADE_HOOKUP_OBJECT (liste_capteurs, treeview1, "treeview1");
  GLADE_HOOKUP_OBJECT (liste_capteurs, retourL, "retourL");
  GLADE_HOOKUP_OBJECT (liste_capteurs, alignment1, "alignment1");
  GLADE_HOOKUP_OBJECT (liste_capteurs, hbox1, "hbox1");
  GLADE_HOOKUP_OBJECT (liste_capteurs, image1, "image1");
  GLADE_HOOKUP_OBJECT (liste_capteurs, label2, "label2");
  GLADE_HOOKUP_OBJECT (liste_capteurs, ajouterL, "ajouterL");
  GLADE_HOOKUP_OBJECT (liste_capteurs, alignment2, "alignment2");
  GLADE_HOOKUP_OBJECT (liste_capteurs, hbox2, "hbox2");
  GLADE_HOOKUP_OBJECT (liste_capteurs, image2, "image2");
  GLADE_HOOKUP_OBJECT (liste_capteurs, label3, "label3");
  GLADE_HOOKUP_OBJECT (liste_capteurs, modifierL, "modifierL");
  GLADE_HOOKUP_OBJECT (liste_capteurs, alignment3, "alignment3");
  GLADE_HOOKUP_OBJECT (liste_capteurs, hbox3, "hbox3");
  GLADE_HOOKUP_OBJECT (liste_capteurs, image3, "image3");
  GLADE_HOOKUP_OBJECT (liste_capteurs, label4, "label4");
  GLADE_HOOKUP_OBJECT (liste_capteurs, rechercher, "rechercher");
  GLADE_HOOKUP_OBJECT (liste_capteurs, alignment31, "alignment31");
  GLADE_HOOKUP_OBJECT (liste_capteurs, hbox31, "hbox31");
  GLADE_HOOKUP_OBJECT (liste_capteurs, image35, "image35");
  GLADE_HOOKUP_OBJECT (liste_capteurs, label84, "label84");
  GLADE_HOOKUP_OBJECT (liste_capteurs, label1, "label1");

  return liste_capteurs;
}

GtkWidget*
create_ajouter_capteur (void)
{
  GtkWidget *ajouter_capteur;
  GtkWidget *fixed2;
  GtkWidget *label6;
  GtkWidget *label9;
  GtkWidget *label10;
  GtkWidget *label7;
  GtkWidget *label8;
  GtkWidget *marque;
  GtkWidget *reference;
  GtkWidget *temps_reponse;
  GtkWidget *precision;
  GtkWidget *retourA;
  GtkWidget *alignment5;
  GtkWidget *hbox5;
  GtkWidget *image5;
  GtkWidget *label11;
  GtkWidget *enregistrerA;
  GtkWidget *alignment6;
  GtkWidget *hbox6;
  GtkWidget *image6;
  GtkWidget *label12;
  GtkWidget *label83;
  GtkWidget *vseparator1;
  GtkWidget *vseparator2;
  GtkWidget *hseparator1;
  GtkWidget *hseparator2;
  GtkWidget *radiobutton1;
  GSList *radiobutton1_group = NULL;
  GtkWidget *radiobutton2;

  ajouter_capteur = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (ajouter_capteur), _("window2"));

  fixed2 = gtk_fixed_new ();
  gtk_widget_show (fixed2);
  gtk_container_add (GTK_CONTAINER (ajouter_capteur), fixed2);

  label6 = gtk_label_new (_("Type capteur :"));
  gtk_widget_show (label6);
  gtk_fixed_put (GTK_FIXED (fixed2), label6, 32, 40);
  gtk_widget_set_size_request (label6, 120, 30);

  label9 = gtk_label_new (_("Temps de reponse"));
  gtk_widget_show (label9);
  gtk_fixed_put (GTK_FIXED (fixed2), label9, 400, 40);
  gtk_widget_set_size_request (label9, 155, 30);

  label10 = gtk_label_new (_("Precision :"));
  gtk_widget_show (label10);
  gtk_fixed_put (GTK_FIXED (fixed2), label10, 392, 96);
  gtk_widget_set_size_request (label10, 120, 30);

  label7 = gtk_label_new (_("Marque :"));
  gtk_widget_show (label7);
  gtk_fixed_put (GTK_FIXED (fixed2), label7, 16, 96);
  gtk_widget_set_size_request (label7, 120, 30);

  label8 = gtk_label_new (_("Reference :"));
  gtk_widget_show (label8);
  gtk_fixed_put (GTK_FIXED (fixed2), label8, 24, 152);
  gtk_widget_set_size_request (label8, 120, 30);

  marque = gtk_entry_new ();
  gtk_widget_show (marque);
  gtk_fixed_put (GTK_FIXED (fixed2), marque, 160, 104);
  gtk_widget_set_size_request (marque, 200, 25);
  gtk_entry_set_invisible_char (GTK_ENTRY (marque), 8226);

  reference = gtk_entry_new ();
  gtk_widget_show (reference);
  gtk_fixed_put (GTK_FIXED (fixed2), reference, 160, 152);
  gtk_widget_set_size_request (reference, 200, 25);
  gtk_entry_set_invisible_char (GTK_ENTRY (reference), 8226);

  temps_reponse = gtk_entry_new ();
  gtk_widget_show (temps_reponse);
  gtk_fixed_put (GTK_FIXED (fixed2), temps_reponse, 560, 40);
  gtk_widget_set_size_request (temps_reponse, 200, 25);
  gtk_entry_set_invisible_char (GTK_ENTRY (temps_reponse), 8226);

  precision = gtk_entry_new ();
  gtk_widget_show (precision);
  gtk_fixed_put (GTK_FIXED (fixed2), precision, 560, 96);
  gtk_widget_set_size_request (precision, 200, 25);
  gtk_entry_set_invisible_char (GTK_ENTRY (precision), 8226);

  retourA = gtk_button_new ();
  gtk_widget_show (retourA);
  gtk_fixed_put (GTK_FIXED (fixed2), retourA, 224, 232);
  gtk_widget_set_size_request (retourA, 140, 30);

  alignment5 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment5);
  gtk_container_add (GTK_CONTAINER (retourA), alignment5);

  hbox5 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox5);
  gtk_container_add (GTK_CONTAINER (alignment5), hbox5);

  image5 = gtk_image_new_from_stock ("gtk-go-back", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image5);
  gtk_box_pack_start (GTK_BOX (hbox5), image5, FALSE, FALSE, 0);

  label11 = gtk_label_new_with_mnemonic (_("Retour"));
  gtk_widget_show (label11);
  gtk_box_pack_start (GTK_BOX (hbox5), label11, FALSE, FALSE, 0);

  enregistrerA = gtk_button_new ();
  gtk_widget_show (enregistrerA);
  gtk_fixed_put (GTK_FIXED (fixed2), enregistrerA, 448, 232);
  gtk_widget_set_size_request (enregistrerA, 140, 30);

  alignment6 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment6);
  gtk_container_add (GTK_CONTAINER (enregistrerA), alignment6);

  hbox6 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox6);
  gtk_container_add (GTK_CONTAINER (alignment6), hbox6);

  image6 = gtk_image_new_from_stock ("gtk-floppy", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image6);
  gtk_box_pack_start (GTK_BOX (hbox6), image6, FALSE, FALSE, 0);

  label12 = gtk_label_new_with_mnemonic (_("Enregistrer"));
  gtk_widget_show (label12);
  gtk_box_pack_start (GTK_BOX (hbox6), label12, FALSE, FALSE, 0);

  label83 = gtk_label_new (_("label83"));
  gtk_widget_show (label83);
  gtk_fixed_put (GTK_FIXED (fixed2), label83, 192, 280);
  gtk_widget_set_size_request (label83, 488, 46);

  vseparator1 = gtk_vseparator_new ();
  gtk_widget_show (vseparator1);
  gtk_fixed_put (GTK_FIXED (fixed2), vseparator1, 152, 16);
  gtk_widget_set_size_request (vseparator1, 16, 72);

  vseparator2 = gtk_vseparator_new ();
  gtk_widget_show (vseparator2);
  gtk_fixed_put (GTK_FIXED (fixed2), vseparator2, 352, 16);
  gtk_widget_set_size_request (vseparator2, 16, 72);

  hseparator1 = gtk_hseparator_new ();
  gtk_widget_show (hseparator1);
  gtk_fixed_put (GTK_FIXED (fixed2), hseparator1, 160, 80);
  gtk_widget_set_size_request (hseparator1, 200, 16);

  hseparator2 = gtk_hseparator_new ();
  gtk_widget_show (hseparator2);
  gtk_fixed_put (GTK_FIXED (fixed2), hseparator2, 160, 8);
  gtk_widget_set_size_request (hseparator2, 200, 16);

  radiobutton1 = gtk_radio_button_new_with_mnemonic (NULL, _("Temperature"));
  gtk_widget_show (radiobutton1);
  gtk_fixed_put (GTK_FIXED (fixed2), radiobutton1, 176, 24);
  gtk_widget_set_size_request (radiobutton1, 138, 26);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (radiobutton1), radiobutton1_group);
  radiobutton1_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (radiobutton1));

  radiobutton2 = gtk_radio_button_new_with_mnemonic (NULL, _("Humidite"));
  gtk_widget_show (radiobutton2);
  gtk_fixed_put (GTK_FIXED (fixed2), radiobutton2, 176, 56);
  gtk_widget_set_size_request (radiobutton2, 138, 26);
  gtk_radio_button_set_group (GTK_RADIO_BUTTON (radiobutton2), radiobutton1_group);
  radiobutton1_group = gtk_radio_button_get_group (GTK_RADIO_BUTTON (radiobutton2));

  g_signal_connect ((gpointer) retourA, "clicked",
                    G_CALLBACK (on_retourA_clicked),
                    NULL);
  g_signal_connect ((gpointer) enregistrerA, "clicked",
                    G_CALLBACK (on_enregistrerA_clicked),
                    NULL);
  g_signal_connect ((gpointer) radiobutton1, "toggled",
                    G_CALLBACK (on_radiobutton1_toggled),
                    NULL);
  g_signal_connect ((gpointer) radiobutton2, "toggled",
                    G_CALLBACK (on_radiobutton2_toggled),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (ajouter_capteur, ajouter_capteur, "ajouter_capteur");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, fixed2, "fixed2");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, label6, "label6");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, label9, "label9");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, label10, "label10");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, label7, "label7");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, label8, "label8");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, marque, "marque");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, reference, "reference");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, temps_reponse, "temps_reponse");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, precision, "precision");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, retourA, "retourA");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, alignment5, "alignment5");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, hbox5, "hbox5");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, image5, "image5");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, label11, "label11");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, enregistrerA, "enregistrerA");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, alignment6, "alignment6");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, hbox6, "hbox6");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, image6, "image6");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, label12, "label12");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, label83, "label83");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, vseparator1, "vseparator1");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, vseparator2, "vseparator2");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, hseparator1, "hseparator1");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, hseparator2, "hseparator2");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, radiobutton1, "radiobutton1");
  GLADE_HOOKUP_OBJECT (ajouter_capteur, radiobutton2, "radiobutton2");

  return ajouter_capteur;
}

GtkWidget*
create_gestion_capteur (void)
{
  GtkWidget *gestion_capteur;
  GtkWidget *fixed3;
  GtkWidget *captA;
  GtkWidget *label14;
  GtkWidget *liste_capteur;
  GtkWidget *captD;
  GtkWidget *retourG;
  GtkWidget *alignment15;
  GtkWidget *hbox15;
  GtkWidget *image15;
  GtkWidget *label31;

  gestion_capteur = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (gestion_capteur), _("window1"));

  fixed3 = gtk_fixed_new ();
  gtk_widget_show (fixed3);
  gtk_container_add (GTK_CONTAINER (gestion_capteur), fixed3);

  captA = gtk_button_new_with_mnemonic (_("Les capteurs ayant des valeurs alarmantes"));
  gtk_widget_show (captA);
  gtk_fixed_put (GTK_FIXED (fixed3), captA, 40, 136);
  gtk_widget_set_size_request (captA, 368, 56);

  label14 = gtk_label_new (_("Gestion des capteurs :"));
  gtk_widget_show (label14);
  gtk_fixed_put (GTK_FIXED (fixed3), label14, 144, 8);
  gtk_widget_set_size_request (label14, 192, 46);

  liste_capteur = gtk_button_new_with_mnemonic (_("Liste des capteurs"));
  gtk_widget_show (liste_capteur);
  gtk_fixed_put (GTK_FIXED (fixed3), liste_capteur, 40, 64);
  gtk_widget_set_size_request (liste_capteur, 368, 56);

  captD = gtk_button_new_with_mnemonic (_("La marque ayant des capteurs defectueux"));
  gtk_widget_show (captD);
  gtk_fixed_put (GTK_FIXED (fixed3), captD, 40, 216);
  gtk_widget_set_size_request (captD, 368, 56);

  retourG = gtk_button_new ();
  gtk_widget_show (retourG);
  gtk_fixed_put (GTK_FIXED (fixed3), retourG, 32, 296);
  gtk_widget_set_size_request (retourG, 120, 30);

  alignment15 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment15);
  gtk_container_add (GTK_CONTAINER (retourG), alignment15);

  hbox15 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox15);
  gtk_container_add (GTK_CONTAINER (alignment15), hbox15);

  image15 = gtk_image_new_from_stock ("gtk-go-back", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image15);
  gtk_box_pack_start (GTK_BOX (hbox15), image15, FALSE, FALSE, 0);

  label31 = gtk_label_new_with_mnemonic (_("Retour"));
  gtk_widget_show (label31);
  gtk_box_pack_start (GTK_BOX (hbox15), label31, FALSE, FALSE, 0);

  g_signal_connect ((gpointer) liste_capteur, "clicked",
                    G_CALLBACK (on_liste_capteur_clicked),
                    NULL);
  g_signal_connect ((gpointer) retourG, "clicked",
                    G_CALLBACK (on_retourG_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (gestion_capteur, gestion_capteur, "gestion_capteur");
  GLADE_HOOKUP_OBJECT (gestion_capteur, fixed3, "fixed3");
  GLADE_HOOKUP_OBJECT (gestion_capteur, captA, "captA");
  GLADE_HOOKUP_OBJECT (gestion_capteur, label14, "label14");
  GLADE_HOOKUP_OBJECT (gestion_capteur, liste_capteur, "liste_capteur");
  GLADE_HOOKUP_OBJECT (gestion_capteur, captD, "captD");
  GLADE_HOOKUP_OBJECT (gestion_capteur, retourG, "retourG");
  GLADE_HOOKUP_OBJECT (gestion_capteur, alignment15, "alignment15");
  GLADE_HOOKUP_OBJECT (gestion_capteur, hbox15, "hbox15");
  GLADE_HOOKUP_OBJECT (gestion_capteur, image15, "image15");
  GLADE_HOOKUP_OBJECT (gestion_capteur, label31, "label31");

  return gestion_capteur;
}

GtkWidget*
create_enregistrement (void)
{
  GtkWidget *enregistrement;
  GtkWidget *fixed6;
  GtkWidget *capteurH;
  GtkWidget *capteurT;
  GtkWidget *label19;
  GtkWidget *retourE;
  GtkWidget *alignment10;
  GtkWidget *hbox10;
  GtkWidget *image10;
  GtkWidget *label20;

  enregistrement = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (enregistrement), _("window1"));

  fixed6 = gtk_fixed_new ();
  gtk_widget_show (fixed6);
  gtk_container_add (GTK_CONTAINER (enregistrement), fixed6);

  capteurH = gtk_button_new_with_mnemonic (_("Capteurs d'humidit\303\251"));
  gtk_widget_show (capteurH);
  gtk_fixed_put (GTK_FIXED (fixed6), capteurH, 96, 80);
  gtk_widget_set_size_request (capteurH, 300, 45);

  capteurT = gtk_button_new_with_mnemonic (_("Capteurs de temperature"));
  gtk_widget_show (capteurT);
  gtk_fixed_put (GTK_FIXED (fixed6), capteurT, 96, 160);
  gtk_widget_set_size_request (capteurT, 300, 45);

  label19 = gtk_label_new (_("Enregistrement :"));
  gtk_widget_show (label19);
  gtk_fixed_put (GTK_FIXED (fixed6), label19, 104, 16);
  gtk_widget_set_size_request (label19, 300, 30);

  retourE = gtk_button_new ();
  gtk_widget_show (retourE);
  gtk_fixed_put (GTK_FIXED (fixed6), retourE, 48, 248);
  gtk_widget_set_size_request (retourE, 120, 30);

  alignment10 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment10);
  gtk_container_add (GTK_CONTAINER (retourE), alignment10);

  hbox10 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox10);
  gtk_container_add (GTK_CONTAINER (alignment10), hbox10);

  image10 = gtk_image_new_from_stock ("gtk-go-back", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image10);
  gtk_box_pack_start (GTK_BOX (hbox10), image10, FALSE, FALSE, 0);

  label20 = gtk_label_new_with_mnemonic (_("Retour"));
  gtk_widget_show (label20);
  gtk_box_pack_start (GTK_BOX (hbox10), label20, FALSE, FALSE, 0);

  g_signal_connect ((gpointer) capteurH, "clicked",
                    G_CALLBACK (on_capteurH_clicked),
                    NULL);
  g_signal_connect ((gpointer) capteurT, "clicked",
                    G_CALLBACK (on_capteurT_clicked),
                    NULL);
  g_signal_connect ((gpointer) retourE, "clicked",
                    G_CALLBACK (on_retourE_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (enregistrement, enregistrement, "enregistrement");
  GLADE_HOOKUP_OBJECT (enregistrement, fixed6, "fixed6");
  GLADE_HOOKUP_OBJECT (enregistrement, capteurH, "capteurH");
  GLADE_HOOKUP_OBJECT (enregistrement, capteurT, "capteurT");
  GLADE_HOOKUP_OBJECT (enregistrement, label19, "label19");
  GLADE_HOOKUP_OBJECT (enregistrement, retourE, "retourE");
  GLADE_HOOKUP_OBJECT (enregistrement, alignment10, "alignment10");
  GLADE_HOOKUP_OBJECT (enregistrement, hbox10, "hbox10");
  GLADE_HOOKUP_OBJECT (enregistrement, image10, "image10");
  GLADE_HOOKUP_OBJECT (enregistrement, label20, "label20");

  return enregistrement;
}

GtkWidget*
create_capteur (void)
{
  GtkWidget *capteur;
  GtkWidget *fixed9;
  GtkWidget *enregistrement;
  GtkWidget *gestion;

  capteur = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (capteur), _("window1"));

  fixed9 = gtk_fixed_new ();
  gtk_widget_show (fixed9);
  gtk_container_add (GTK_CONTAINER (capteur), fixed9);

  enregistrement = gtk_button_new_with_mnemonic (_("Enregistrement"));
  gtk_widget_show (enregistrement);
  gtk_fixed_put (GTK_FIXED (fixed9), enregistrement, 72, 64);
  gtk_widget_set_size_request (enregistrement, 300, 45);

  gestion = gtk_button_new_with_mnemonic (_("Gestion des capteurs"));
  gtk_widget_show (gestion);
  gtk_fixed_put (GTK_FIXED (fixed9), gestion, 72, 168);
  gtk_widget_set_size_request (gestion, 296, 56);

  g_signal_connect ((gpointer) enregistrement, "clicked",
                    G_CALLBACK (on_enregistrement_clicked),
                    NULL);
  g_signal_connect ((gpointer) gestion, "clicked",
                    G_CALLBACK (on_gestion_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (capteur, capteur, "capteur");
  GLADE_HOOKUP_OBJECT (capteur, fixed9, "fixed9");
  GLADE_HOOKUP_OBJECT (capteur, enregistrement, "enregistrement");
  GLADE_HOOKUP_OBJECT (capteur, gestion, "gestion");

  return capteur;
}

GtkWidget*
create_modifier_capteur (void)
{
  GtkWidget *modifier_capteur;
  GtkWidget *fixed10;
  GtkWidget *label35;
  GtkWidget *label34;
  GtkWidget *label36;
  GtkWidget *combobox3;
  GtkWidget *marque;
  GtkWidget *reference;
  GtkWidget *label37;
  GtkWidget *label38;
  GtkWidget *temps_reponse;
  GtkWidget *precision;
  GtkWidget *enregistrerMC;
  GtkWidget *alignment17;
  GtkWidget *hbox17;
  GtkWidget *image19;
  GtkWidget *label40;
  GtkWidget *retourMC;
  GtkWidget *alignment16;
  GtkWidget *hbox16;
  GtkWidget *image18;
  GtkWidget *label39;
  GtkWidget *label82;
  GtkWidget *label33;

  modifier_capteur = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (modifier_capteur), _("window1"));

  fixed10 = gtk_fixed_new ();
  gtk_widget_show (fixed10);
  gtk_container_add (GTK_CONTAINER (modifier_capteur), fixed10);

  label35 = gtk_label_new (_("Marque :"));
  gtk_widget_show (label35);
  gtk_fixed_put (GTK_FIXED (fixed10), label35, 0, 112);
  gtk_widget_set_size_request (label35, 120, 30);

  label34 = gtk_label_new (_("Type_capteur :"));
  gtk_widget_show (label34);
  gtk_fixed_put (GTK_FIXED (fixed10), label34, 16, 64);
  gtk_widget_set_size_request (label34, 125, 30);

  label36 = gtk_label_new (_("Reference :"));
  gtk_widget_show (label36);
  gtk_fixed_put (GTK_FIXED (fixed10), label36, 8, 168);
  gtk_widget_set_size_request (label36, 120, 30);

  combobox3 = gtk_combo_box_new_text ();
  gtk_widget_show (combobox3);
  gtk_fixed_put (GTK_FIXED (fixed10), combobox3, 168, 64);
  gtk_widget_set_size_request (combobox3, 200, 30);
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox3), _("Temperature"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox3), _("Humidite"));

  marque = gtk_entry_new ();
  gtk_widget_show (marque);
  gtk_fixed_put (GTK_FIXED (fixed10), marque, 168, 112);
  gtk_widget_set_size_request (marque, 200, 30);
  gtk_entry_set_invisible_char (GTK_ENTRY (marque), 8226);

  reference = gtk_entry_new ();
  gtk_widget_show (reference);
  gtk_fixed_put (GTK_FIXED (fixed10), reference, 168, 168);
  gtk_widget_set_size_request (reference, 200, 30);
  gtk_entry_set_invisible_char (GTK_ENTRY (reference), 8226);

  label37 = gtk_label_new (_("Temps de reponse :"));
  gtk_widget_show (label37);
  gtk_fixed_put (GTK_FIXED (fixed10), label37, 392, 64);
  gtk_widget_set_size_request (label37, 159, 30);

  label38 = gtk_label_new (_("Precision :"));
  gtk_widget_show (label38);
  gtk_fixed_put (GTK_FIXED (fixed10), label38, 384, 112);
  gtk_widget_set_size_request (label38, 120, 30);

  temps_reponse = gtk_entry_new ();
  gtk_widget_show (temps_reponse);
  gtk_fixed_put (GTK_FIXED (fixed10), temps_reponse, 568, 56);
  gtk_widget_set_size_request (temps_reponse, 200, 30);
  gtk_entry_set_invisible_char (GTK_ENTRY (temps_reponse), 8226);

  precision = gtk_entry_new ();
  gtk_widget_show (precision);
  gtk_fixed_put (GTK_FIXED (fixed10), precision, 568, 112);
  gtk_widget_set_size_request (precision, 200, 30);
  gtk_entry_set_invisible_char (GTK_ENTRY (precision), 8226);

  enregistrerMC = gtk_button_new ();
  gtk_widget_show (enregistrerMC);
  gtk_fixed_put (GTK_FIXED (fixed10), enregistrerMC, 528, 240);
  gtk_widget_set_size_request (enregistrerMC, 120, 30);

  alignment17 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment17);
  gtk_container_add (GTK_CONTAINER (enregistrerMC), alignment17);

  hbox17 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox17);
  gtk_container_add (GTK_CONTAINER (alignment17), hbox17);

  image19 = gtk_image_new_from_stock ("gtk-floppy", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image19);
  gtk_box_pack_start (GTK_BOX (hbox17), image19, FALSE, FALSE, 0);

  label40 = gtk_label_new_with_mnemonic (_("Enregistrer"));
  gtk_widget_show (label40);
  gtk_box_pack_start (GTK_BOX (hbox17), label40, FALSE, FALSE, 0);

  retourMC = gtk_button_new ();
  gtk_widget_show (retourMC);
  gtk_fixed_put (GTK_FIXED (fixed10), retourMC, 192, 240);
  gtk_widget_set_size_request (retourMC, 120, 30);

  alignment16 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment16);
  gtk_container_add (GTK_CONTAINER (retourMC), alignment16);

  hbox16 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox16);
  gtk_container_add (GTK_CONTAINER (alignment16), hbox16);

  image18 = gtk_image_new_from_stock ("gtk-go-back", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image18);
  gtk_box_pack_start (GTK_BOX (hbox16), image18, FALSE, FALSE, 0);

  label39 = gtk_label_new_with_mnemonic (_("Retour"));
  gtk_widget_show (label39);
  gtk_box_pack_start (GTK_BOX (hbox16), label39, FALSE, FALSE, 0);

  label82 = gtk_label_new (_("label82"));
  gtk_widget_show (label82);
  gtk_fixed_put (GTK_FIXED (fixed10), label82, 256, 296);
  gtk_widget_set_size_request (label82, 384, 38);

  label33 = gtk_label_new (_("Modifier un capteur :"));
  gtk_widget_show (label33);
  gtk_fixed_put (GTK_FIXED (fixed10), label33, 248, 8);
  gtk_widget_set_size_request (label33, 200, 30);

  g_signal_connect ((gpointer) enregistrerMC, "clicked",
                    G_CALLBACK (on_enregistrerMC_clicked),
                    NULL);
  g_signal_connect ((gpointer) retourMC, "clicked",
                    G_CALLBACK (on_retourMC_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (modifier_capteur, modifier_capteur, "modifier_capteur");
  GLADE_HOOKUP_OBJECT (modifier_capteur, fixed10, "fixed10");
  GLADE_HOOKUP_OBJECT (modifier_capteur, label35, "label35");
  GLADE_HOOKUP_OBJECT (modifier_capteur, label34, "label34");
  GLADE_HOOKUP_OBJECT (modifier_capteur, label36, "label36");
  GLADE_HOOKUP_OBJECT (modifier_capteur, combobox3, "combobox3");
  GLADE_HOOKUP_OBJECT (modifier_capteur, marque, "marque");
  GLADE_HOOKUP_OBJECT (modifier_capteur, reference, "reference");
  GLADE_HOOKUP_OBJECT (modifier_capteur, label37, "label37");
  GLADE_HOOKUP_OBJECT (modifier_capteur, label38, "label38");
  GLADE_HOOKUP_OBJECT (modifier_capteur, temps_reponse, "temps_reponse");
  GLADE_HOOKUP_OBJECT (modifier_capteur, precision, "precision");
  GLADE_HOOKUP_OBJECT (modifier_capteur, enregistrerMC, "enregistrerMC");
  GLADE_HOOKUP_OBJECT (modifier_capteur, alignment17, "alignment17");
  GLADE_HOOKUP_OBJECT (modifier_capteur, hbox17, "hbox17");
  GLADE_HOOKUP_OBJECT (modifier_capteur, image19, "image19");
  GLADE_HOOKUP_OBJECT (modifier_capteur, label40, "label40");
  GLADE_HOOKUP_OBJECT (modifier_capteur, retourMC, "retourMC");
  GLADE_HOOKUP_OBJECT (modifier_capteur, alignment16, "alignment16");
  GLADE_HOOKUP_OBJECT (modifier_capteur, hbox16, "hbox16");
  GLADE_HOOKUP_OBJECT (modifier_capteur, image18, "image18");
  GLADE_HOOKUP_OBJECT (modifier_capteur, label39, "label39");
  GLADE_HOOKUP_OBJECT (modifier_capteur, label82, "label82");
  GLADE_HOOKUP_OBJECT (modifier_capteur, label33, "label33");

  return modifier_capteur;
}

GtkWidget*
create_fenetre_ajouter_enH (void)
{
  GtkWidget *fenetre_ajouter_enH;
  GtkWidget *fixed11;
  GtkWidget *treeview3;
  GtkWidget *ajouterEH;
  GtkWidget *alignment18;
  GtkWidget *hbox18;
  GtkWidget *image20;
  GtkWidget *label42;
  GtkWidget *retourEH;
  GtkWidget *alignment28;
  GtkWidget *hbox28;
  GtkWidget *image30;
  GtkWidget *label78;
  GtkWidget *label41;

  fenetre_ajouter_enH = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (fenetre_ajouter_enH), _("window1"));

  fixed11 = gtk_fixed_new ();
  gtk_widget_show (fixed11);
  gtk_container_add (GTK_CONTAINER (fenetre_ajouter_enH), fixed11);

  treeview3 = gtk_tree_view_new ();
  gtk_widget_show (treeview3);
  gtk_fixed_put (GTK_FIXED (fixed11), treeview3, 200, 40);
  gtk_widget_set_size_request (treeview3, 392, 192);

  ajouterEH = gtk_button_new ();
  gtk_widget_show (ajouterEH);
  gtk_fixed_put (GTK_FIXED (fixed11), ajouterEH, 376, 264);
  gtk_widget_set_size_request (ajouterEH, 120, 30);

  alignment18 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment18);
  gtk_container_add (GTK_CONTAINER (ajouterEH), alignment18);

  hbox18 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox18);
  gtk_container_add (GTK_CONTAINER (alignment18), hbox18);

  image20 = gtk_image_new_from_stock ("gtk-add", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image20);
  gtk_box_pack_start (GTK_BOX (hbox18), image20, FALSE, FALSE, 0);

  label42 = gtk_label_new_with_mnemonic (_("Ajouter"));
  gtk_widget_show (label42);
  gtk_box_pack_start (GTK_BOX (hbox18), label42, FALSE, FALSE, 0);

  retourEH = gtk_button_new ();
  gtk_widget_show (retourEH);
  gtk_fixed_put (GTK_FIXED (fixed11), retourEH, 136, 264);
  gtk_widget_set_size_request (retourEH, 120, 30);

  alignment28 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment28);
  gtk_container_add (GTK_CONTAINER (retourEH), alignment28);

  hbox28 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox28);
  gtk_container_add (GTK_CONTAINER (alignment28), hbox28);

  image30 = gtk_image_new_from_stock ("gtk-go-back", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image30);
  gtk_box_pack_start (GTK_BOX (hbox28), image30, FALSE, FALSE, 0);

  label78 = gtk_label_new_with_mnemonic (_("Retour"));
  gtk_widget_show (label78);
  gtk_box_pack_start (GTK_BOX (hbox28), label78, FALSE, FALSE, 0);

  label41 = gtk_label_new (_("Les enregistrements des capteurs :"));
  gtk_widget_show (label41);
  gtk_fixed_put (GTK_FIXED (fixed11), label41, 96, 8);
  gtk_widget_set_size_request (label41, 500, 30);

  g_signal_connect ((gpointer) treeview3, "row_activated",
                    G_CALLBACK (on_treeview3_row_activated),
                    NULL);
  g_signal_connect ((gpointer) ajouterEH, "clicked",
                    G_CALLBACK (on_ajouterEH_clicked),
                    NULL);
  g_signal_connect ((gpointer) retourEH, "clicked",
                    G_CALLBACK (on_retourEH_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (fenetre_ajouter_enH, fenetre_ajouter_enH, "fenetre_ajouter_enH");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, fixed11, "fixed11");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, treeview3, "treeview3");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, ajouterEH, "ajouterEH");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, alignment18, "alignment18");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, hbox18, "hbox18");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, image20, "image20");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, label42, "label42");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, retourEH, "retourEH");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, alignment28, "alignment28");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, hbox28, "hbox28");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, image30, "image30");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, label78, "label78");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enH, label41, "label41");

  return fenetre_ajouter_enH;
}

GtkWidget*
create_fenetre_afficher_enH (void)
{
  GtkWidget *fenetre_afficher_enH;
  GtkWidget *fixed12;
  GtkWidget *label44;
  GtkWidget *label46;
  GtkWidget *label47;
  GtkWidget *label48;
  GtkWidget *HEURE;
  GtkWidget *VALEUR;
  GtkObject *spinbutton2_adj;
  GtkWidget *spinbutton2;
  GtkObject *spinbutton1_adj;
  GtkWidget *spinbutton1;
  GtkObject *spinbutton3_adj;
  GtkWidget *spinbutton3;
  GtkWidget *enregistrerEH;
  GtkWidget *alignment19;
  GtkWidget *hbox19;
  GtkWidget *image21;
  GtkWidget *label49;
  GtkWidget *afficherEH;
  GtkWidget *alignment20;
  GtkWidget *hbox20;
  GtkWidget *image22;
  GtkWidget *label50;
  GtkWidget *label51;
  GtkWidget *label43;
  GtkWidget *REFERENCE;
  GtkWidget *DISPOH;
  GtkWidget *image33;

  fenetre_afficher_enH = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (fenetre_afficher_enH), _("window2"));

  fixed12 = gtk_fixed_new ();
  gtk_widget_show (fixed12);
  gtk_container_add (GTK_CONTAINER (fenetre_afficher_enH), fixed12);

  label44 = gtk_label_new (_("Reference :"));
  gtk_widget_show (label44);
  gtk_fixed_put (GTK_FIXED (fixed12), label44, 40, 72);
  gtk_widget_set_size_request (label44, 120, 30);

  label46 = gtk_label_new (_("Date :"));
  gtk_widget_show (label46);
  gtk_fixed_put (GTK_FIXED (fixed12), label46, 16, 120);
  gtk_widget_set_size_request (label46, 120, 30);

  label47 = gtk_label_new (_("Heure :"));
  gtk_widget_show (label47);
  gtk_fixed_put (GTK_FIXED (fixed12), label47, 16, 168);
  gtk_widget_set_size_request (label47, 120, 30);

  label48 = gtk_label_new (_("Valeur :"));
  gtk_widget_show (label48);
  gtk_fixed_put (GTK_FIXED (fixed12), label48, 16, 216);
  gtk_widget_set_size_request (label48, 120, 30);

  HEURE = gtk_entry_new ();
  gtk_widget_show (HEURE);
  gtk_fixed_put (GTK_FIXED (fixed12), HEURE, 168, 168);
  gtk_widget_set_size_request (HEURE, 200, 30);
  gtk_entry_set_invisible_char (GTK_ENTRY (HEURE), 8226);

  VALEUR = gtk_entry_new ();
  gtk_widget_show (VALEUR);
  gtk_fixed_put (GTK_FIXED (fixed12), VALEUR, 168, 216);
  gtk_widget_set_size_request (VALEUR, 200, 30);
  gtk_entry_set_invisible_char (GTK_ENTRY (VALEUR), 8226);

  spinbutton2_adj = gtk_adjustment_new (1, 1, 12, 1, 10, 10);
  spinbutton2 = gtk_spin_button_new (GTK_ADJUSTMENT (spinbutton2_adj), 1, 0);
  gtk_widget_show (spinbutton2);
  gtk_fixed_put (GTK_FIXED (fixed12), spinbutton2, 264, 120);
  gtk_widget_set_size_request (spinbutton2, 60, 30);

  spinbutton1_adj = gtk_adjustment_new (1, 1, 31, 1, 10, 10);
  spinbutton1 = gtk_spin_button_new (GTK_ADJUSTMENT (spinbutton1_adj), 1, 0);
  gtk_widget_show (spinbutton1);
  gtk_fixed_put (GTK_FIXED (fixed12), spinbutton1, 168, 120);
  gtk_widget_set_size_request (spinbutton1, 60, 30);

  spinbutton3_adj = gtk_adjustment_new (1, 2000, 2020, 1, 10, 10);
  spinbutton3 = gtk_spin_button_new (GTK_ADJUSTMENT (spinbutton3_adj), 1, 0);
  gtk_widget_show (spinbutton3);
  gtk_fixed_put (GTK_FIXED (fixed12), spinbutton3, 360, 120);
  gtk_widget_set_size_request (spinbutton3, 60, 30);

  enregistrerEH = gtk_button_new ();
  gtk_widget_show (enregistrerEH);
  gtk_fixed_put (GTK_FIXED (fixed12), enregistrerEH, 96, 280);
  gtk_widget_set_size_request (enregistrerEH, 120, 30);

  alignment19 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment19);
  gtk_container_add (GTK_CONTAINER (enregistrerEH), alignment19);

  hbox19 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox19);
  gtk_container_add (GTK_CONTAINER (alignment19), hbox19);

  image21 = gtk_image_new_from_stock ("gtk-floppy", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image21);
  gtk_box_pack_start (GTK_BOX (hbox19), image21, FALSE, FALSE, 0);

  label49 = gtk_label_new_with_mnemonic (_("Enregistrer"));
  gtk_widget_show (label49);
  gtk_box_pack_start (GTK_BOX (hbox19), label49, FALSE, FALSE, 0);

  afficherEH = gtk_button_new ();
  gtk_widget_show (afficherEH);
  gtk_fixed_put (GTK_FIXED (fixed12), afficherEH, 336, 280);
  gtk_widget_set_size_request (afficherEH, 120, 30);

  alignment20 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment20);
  gtk_container_add (GTK_CONTAINER (afficherEH), alignment20);

  hbox20 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox20);
  gtk_container_add (GTK_CONTAINER (alignment20), hbox20);

  image22 = gtk_image_new_from_stock ("gtk-justify-fill", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image22);
  gtk_box_pack_start (GTK_BOX (hbox20), image22, FALSE, FALSE, 0);

  label50 = gtk_label_new_with_mnemonic (_("Affichage"));
  gtk_widget_show (label50);
  gtk_box_pack_start (GTK_BOX (hbox20), label50, FALSE, FALSE, 0);

  label51 = gtk_label_new (_("label51"));
  gtk_widget_show (label51);
  gtk_fixed_put (GTK_FIXED (fixed12), label51, 96, 336);
  gtk_widget_set_size_request (label51, 384, 40);

  label43 = gtk_label_new (_("Ajouter une nouvelle enregistrement :"));
  gtk_widget_show (label43);
  gtk_fixed_put (GTK_FIXED (fixed12), label43, 80, 8);
  gtk_widget_set_size_request (label43, 500, 30);

  REFERENCE = gtk_combo_box_new_text ();
  gtk_widget_show (REFERENCE);
  gtk_fixed_put (GTK_FIXED (fixed12), REFERENCE, 168, 72);
  gtk_widget_set_size_request (REFERENCE, 200, 30);

  DISPOH = gtk_button_new ();
  gtk_widget_show (DISPOH);
  gtk_fixed_put (GTK_FIXED (fixed12), DISPOH, 392, 72);
  gtk_widget_set_size_request (DISPOH, 40, 34);

  image33 = gtk_image_new_from_stock ("gtk-refresh", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image33);
  gtk_container_add (GTK_CONTAINER (DISPOH), image33);

  g_signal_connect ((gpointer) enregistrerEH, "clicked",
                    G_CALLBACK (on_enregistrerEH_clicked),
                    NULL);
  g_signal_connect ((gpointer) afficherEH, "clicked",
                    G_CALLBACK (on_afficherEH_clicked),
                    NULL);
  g_signal_connect ((gpointer) DISPOH, "clicked",
                    G_CALLBACK (on_DISPOH_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (fenetre_afficher_enH, fenetre_afficher_enH, "fenetre_afficher_enH");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, fixed12, "fixed12");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, label44, "label44");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, label46, "label46");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, label47, "label47");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, label48, "label48");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, HEURE, "HEURE");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, VALEUR, "VALEUR");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, spinbutton2, "spinbutton2");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, spinbutton1, "spinbutton1");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, spinbutton3, "spinbutton3");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, enregistrerEH, "enregistrerEH");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, alignment19, "alignment19");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, hbox19, "hbox19");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, image21, "image21");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, label49, "label49");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, afficherEH, "afficherEH");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, alignment20, "alignment20");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, hbox20, "hbox20");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, image22, "image22");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, label50, "label50");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, label51, "label51");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, label43, "label43");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, REFERENCE, "REFERENCE");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, DISPOH, "DISPOH");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enH, image33, "image33");

  return fenetre_afficher_enH;
}

GtkWidget*
create_fenetre_afficher_enT (void)
{
  GtkWidget *fenetre_afficher_enT;
  GtkWidget *fixed14;
  GtkWidget *label62;
  GtkWidget *label61;
  GtkWidget *label64;
  GtkWidget *label63;
  GtkWidget *HEURE;
  GtkWidget *VALEUR;
  GtkObject *spinbutton7_adj;
  GtkWidget *spinbutton7;
  GtkObject *spinbutton8_adj;
  GtkWidget *spinbutton8;
  GtkObject *spinbutton9_adj;
  GtkWidget *spinbutton9;
  GtkWidget *enregistrerET;
  GtkWidget *alignment23;
  GtkWidget *hbox23;
  GtkWidget *image25;
  GtkWidget *label65;
  GtkWidget *label67;
  GtkWidget *label60;
  GtkWidget *afficherT;
  GtkWidget *alignment24;
  GtkWidget *hbox24;
  GtkWidget *image26;
  GtkWidget *label66;
  GtkWidget *REFERENCE;
  GtkWidget *DISPOT;
  GtkWidget *image34;

  fenetre_afficher_enT = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (fenetre_afficher_enT), _("window1"));

  fixed14 = gtk_fixed_new ();
  gtk_widget_show (fixed14);
  gtk_container_add (GTK_CONTAINER (fenetre_afficher_enT), fixed14);

  label62 = gtk_label_new (_("Date :"));
  gtk_widget_show (label62);
  gtk_fixed_put (GTK_FIXED (fixed14), label62, 0, 120);
  gtk_widget_set_size_request (label62, 120, 30);

  label61 = gtk_label_new (_("Reference :"));
  gtk_widget_show (label61);
  gtk_fixed_put (GTK_FIXED (fixed14), label61, 24, 72);
  gtk_widget_set_size_request (label61, 120, 30);

  label64 = gtk_label_new (_("Valeur :"));
  gtk_widget_show (label64);
  gtk_fixed_put (GTK_FIXED (fixed14), label64, 32, 232);
  gtk_widget_set_size_request (label64, 61, 22);

  label63 = gtk_label_new (_("Heure :"));
  gtk_widget_show (label63);
  gtk_fixed_put (GTK_FIXED (fixed14), label63, 8, 176);
  gtk_widget_set_size_request (label63, 120, 30);

  HEURE = gtk_entry_new ();
  gtk_widget_show (HEURE);
  gtk_fixed_put (GTK_FIXED (fixed14), HEURE, 176, 168);
  gtk_widget_set_size_request (HEURE, 200, 30);
  gtk_entry_set_invisible_char (GTK_ENTRY (HEURE), 8226);

  VALEUR = gtk_entry_new ();
  gtk_widget_show (VALEUR);
  gtk_fixed_put (GTK_FIXED (fixed14), VALEUR, 176, 232);
  gtk_widget_set_size_request (VALEUR, 200, 30);
  gtk_entry_set_invisible_char (GTK_ENTRY (VALEUR), 8226);

  spinbutton7_adj = gtk_adjustment_new (1, 1, 31, 1, 10, 10);
  spinbutton7 = gtk_spin_button_new (GTK_ADJUSTMENT (spinbutton7_adj), 1, 0);
  gtk_widget_show (spinbutton7);
  gtk_fixed_put (GTK_FIXED (fixed14), spinbutton7, 160, 120);
  gtk_widget_set_size_request (spinbutton7, 50, 30);

  spinbutton8_adj = gtk_adjustment_new (1, 1, 12, 1, 10, 10);
  spinbutton8 = gtk_spin_button_new (GTK_ADJUSTMENT (spinbutton8_adj), 1, 0);
  gtk_widget_show (spinbutton8);
  gtk_fixed_put (GTK_FIXED (fixed14), spinbutton8, 248, 120);
  gtk_widget_set_size_request (spinbutton8, 50, 30);

  spinbutton9_adj = gtk_adjustment_new (1, 2000, 2020, 1, 10, 10);
  spinbutton9 = gtk_spin_button_new (GTK_ADJUSTMENT (spinbutton9_adj), 1, 0);
  gtk_widget_show (spinbutton9);
  gtk_fixed_put (GTK_FIXED (fixed14), spinbutton9, 328, 120);
  gtk_widget_set_size_request (spinbutton9, 50, 30);

  enregistrerET = gtk_button_new ();
  gtk_widget_show (enregistrerET);
  gtk_fixed_put (GTK_FIXED (fixed14), enregistrerET, 80, 296);
  gtk_widget_set_size_request (enregistrerET, 120, 30);

  alignment23 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment23);
  gtk_container_add (GTK_CONTAINER (enregistrerET), alignment23);

  hbox23 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox23);
  gtk_container_add (GTK_CONTAINER (alignment23), hbox23);

  image25 = gtk_image_new_from_stock ("gtk-floppy", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image25);
  gtk_box_pack_start (GTK_BOX (hbox23), image25, FALSE, FALSE, 0);

  label65 = gtk_label_new_with_mnemonic (_("Enregistrer"));
  gtk_widget_show (label65);
  gtk_box_pack_start (GTK_BOX (hbox23), label65, FALSE, FALSE, 0);

  label67 = gtk_label_new (_("label67"));
  gtk_widget_show (label67);
  gtk_fixed_put (GTK_FIXED (fixed14), label67, 48, 352);
  gtk_widget_set_size_request (label67, 424, 48);

  label60 = gtk_label_new (_("Ajouter une nouvelle enregistrement :"));
  gtk_widget_show (label60);
  gtk_fixed_put (GTK_FIXED (fixed14), label60, 24, 8);
  gtk_widget_set_size_request (label60, 500, 30);

  afficherT = gtk_button_new ();
  gtk_widget_show (afficherT);
  gtk_fixed_put (GTK_FIXED (fixed14), afficherT, 328, 296);
  gtk_widget_set_size_request (afficherT, 120, 30);

  alignment24 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment24);
  gtk_container_add (GTK_CONTAINER (afficherT), alignment24);

  hbox24 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox24);
  gtk_container_add (GTK_CONTAINER (alignment24), hbox24);

  image26 = gtk_image_new_from_stock ("gtk-justify-fill", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image26);
  gtk_box_pack_start (GTK_BOX (hbox24), image26, FALSE, FALSE, 0);

  label66 = gtk_label_new_with_mnemonic (_("Affichage"));
  gtk_widget_show (label66);
  gtk_box_pack_start (GTK_BOX (hbox24), label66, FALSE, FALSE, 0);

  REFERENCE = gtk_combo_box_new_text ();
  gtk_widget_show (REFERENCE);
  gtk_fixed_put (GTK_FIXED (fixed14), REFERENCE, 176, 80);
  gtk_widget_set_size_request (REFERENCE, 200, 30);

  DISPOT = gtk_button_new ();
  gtk_widget_show (DISPOT);
  gtk_fixed_put (GTK_FIXED (fixed14), DISPOT, 400, 80);
  gtk_widget_set_size_request (DISPOT, 40, 34);

  image34 = gtk_image_new_from_stock ("gtk-refresh", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image34);
  gtk_container_add (GTK_CONTAINER (DISPOT), image34);

  g_signal_connect ((gpointer) enregistrerET, "clicked",
                    G_CALLBACK (on_enregistrerET_clicked),
                    NULL);
  g_signal_connect ((gpointer) afficherT, "clicked",
                    G_CALLBACK (on_afficherT_clicked),
                    NULL);
  g_signal_connect ((gpointer) DISPOT, "clicked",
                    G_CALLBACK (on_DISPOT_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (fenetre_afficher_enT, fenetre_afficher_enT, "fenetre_afficher_enT");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, fixed14, "fixed14");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, label62, "label62");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, label61, "label61");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, label64, "label64");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, label63, "label63");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, HEURE, "HEURE");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, VALEUR, "VALEUR");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, spinbutton7, "spinbutton7");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, spinbutton8, "spinbutton8");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, spinbutton9, "spinbutton9");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, enregistrerET, "enregistrerET");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, alignment23, "alignment23");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, hbox23, "hbox23");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, image25, "image25");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, label65, "label65");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, label67, "label67");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, label60, "label60");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, afficherT, "afficherT");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, alignment24, "alignment24");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, hbox24, "hbox24");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, image26, "image26");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, label66, "label66");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, REFERENCE, "REFERENCE");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, DISPOT, "DISPOT");
  GLADE_HOOKUP_OBJECT (fenetre_afficher_enT, image34, "image34");

  return fenetre_afficher_enT;
}

GtkWidget*
create_fenetre_ajouter_enT (void)
{
  GtkWidget *fenetre_ajouter_enT;
  GtkWidget *fixed15;
  GtkWidget *label79;
  GtkWidget *treeview4;
  GtkWidget *ajouterET;
  GtkWidget *alignment30;
  GtkWidget *hbox30;
  GtkWidget *image32;
  GtkWidget *label81;
  GtkWidget *retourET;
  GtkWidget *alignment29;
  GtkWidget *hbox29;
  GtkWidget *image31;
  GtkWidget *label80;

  fenetre_ajouter_enT = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (fenetre_ajouter_enT), _("window1"));

  fixed15 = gtk_fixed_new ();
  gtk_widget_show (fixed15);
  gtk_container_add (GTK_CONTAINER (fenetre_ajouter_enT), fixed15);

  label79 = gtk_label_new (_("Les enregistrement des capteurs :"));
  gtk_widget_show (label79);
  gtk_fixed_put (GTK_FIXED (fixed15), label79, 72, 8);
  gtk_widget_set_size_request (label79, 500, 30);

  treeview4 = gtk_tree_view_new ();
  gtk_widget_show (treeview4);
  gtk_fixed_put (GTK_FIXED (fixed15), treeview4, 168, 40);
  gtk_widget_set_size_request (treeview4, 300, 200);

  ajouterET = gtk_button_new ();
  gtk_widget_show (ajouterET);
  gtk_fixed_put (GTK_FIXED (fixed15), ajouterET, 408, 264);
  gtk_widget_set_size_request (ajouterET, 120, 30);

  alignment30 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment30);
  gtk_container_add (GTK_CONTAINER (ajouterET), alignment30);

  hbox30 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox30);
  gtk_container_add (GTK_CONTAINER (alignment30), hbox30);

  image32 = gtk_image_new_from_stock ("gtk-add", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image32);
  gtk_box_pack_start (GTK_BOX (hbox30), image32, FALSE, FALSE, 0);

  label81 = gtk_label_new_with_mnemonic (_("Ajouter"));
  gtk_widget_show (label81);
  gtk_box_pack_start (GTK_BOX (hbox30), label81, FALSE, FALSE, 0);

  retourET = gtk_button_new ();
  gtk_widget_show (retourET);
  gtk_fixed_put (GTK_FIXED (fixed15), retourET, 112, 256);
  gtk_widget_set_size_request (retourET, 120, 30);

  alignment29 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment29);
  gtk_container_add (GTK_CONTAINER (retourET), alignment29);

  hbox29 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox29);
  gtk_container_add (GTK_CONTAINER (alignment29), hbox29);

  image31 = gtk_image_new_from_stock ("gtk-go-back", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image31);
  gtk_box_pack_start (GTK_BOX (hbox29), image31, FALSE, FALSE, 0);

  label80 = gtk_label_new_with_mnemonic (_("Retour"));
  gtk_widget_show (label80);
  gtk_box_pack_start (GTK_BOX (hbox29), label80, FALSE, FALSE, 0);

  g_signal_connect ((gpointer) treeview4, "row_activated",
                    G_CALLBACK (on_treeview4_row_activated),
                    NULL);
  g_signal_connect ((gpointer) ajouterET, "clicked",
                    G_CALLBACK (on_ajouterET_clicked),
                    NULL);
  g_signal_connect ((gpointer) retourET, "clicked",
                    G_CALLBACK (on_retourET_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (fenetre_ajouter_enT, fenetre_ajouter_enT, "fenetre_ajouter_enT");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, fixed15, "fixed15");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, label79, "label79");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, treeview4, "treeview4");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, ajouterET, "ajouterET");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, alignment30, "alignment30");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, hbox30, "hbox30");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, image32, "image32");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, label81, "label81");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, retourET, "retourET");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, alignment29, "alignment29");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, hbox29, "hbox29");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, image31, "image31");
  GLADE_HOOKUP_OBJECT (fenetre_ajouter_enT, label80, "label80");

  return fenetre_ajouter_enT;
}

GtkWidget*
create_f_chercher_capteur (void)
{
  GtkWidget *f_chercher_capteur;
  GtkWidget *fixed16;
  GtkWidget *label85;
  GtkWidget *treeview5;
  GtkWidget *label86;
  GtkWidget *retourCHE;
  GtkWidget *alignment32;
  GtkWidget *hbox32;
  GtkWidget *image37;
  GtkWidget *label87;
  GtkWidget *REFERENCE;
  GtkWidget *cher;
  GtkWidget *image36;
  GtkWidget *DISPOCH;
  GtkWidget *image38;

  f_chercher_capteur = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (f_chercher_capteur), _("window1"));

  fixed16 = gtk_fixed_new ();
  gtk_widget_show (fixed16);
  gtk_container_add (GTK_CONTAINER (f_chercher_capteur), fixed16);

  label85 = gtk_label_new (_("Reference :"));
  gtk_widget_show (label85);
  gtk_fixed_put (GTK_FIXED (fixed16), label85, 24, 120);
  gtk_widget_set_size_request (label85, 120, 30);

  treeview5 = gtk_tree_view_new ();
  gtk_widget_show (treeview5);
  gtk_fixed_put (GTK_FIXED (fixed16), treeview5, 88, 168);
  gtk_widget_set_size_request (treeview5, 320, 96);

  label86 = gtk_label_new (_("Rechercher un capteur :"));
  gtk_widget_show (label86);
  gtk_fixed_put (GTK_FIXED (fixed16), label86, 72, 16);
  gtk_widget_set_size_request (label86, 288, 70);

  retourCHE = gtk_button_new ();
  gtk_widget_show (retourCHE);
  gtk_fixed_put (GTK_FIXED (fixed16), retourCHE, 56, 288);
  gtk_widget_set_size_request (retourCHE, 120, 30);

  alignment32 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment32);
  gtk_container_add (GTK_CONTAINER (retourCHE), alignment32);

  hbox32 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox32);
  gtk_container_add (GTK_CONTAINER (alignment32), hbox32);

  image37 = gtk_image_new_from_stock ("gtk-go-back", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image37);
  gtk_box_pack_start (GTK_BOX (hbox32), image37, FALSE, FALSE, 0);

  label87 = gtk_label_new_with_mnemonic (_("Retour"));
  gtk_widget_show (label87);
  gtk_box_pack_start (GTK_BOX (hbox32), label87, FALSE, FALSE, 0);

  REFERENCE = gtk_combo_box_new_text ();
  gtk_widget_show (REFERENCE);
  gtk_fixed_put (GTK_FIXED (fixed16), REFERENCE, 137, 122);
  gtk_widget_set_size_request (REFERENCE, 150, 30);

  cher = gtk_button_new ();
  gtk_widget_show (cher);
  gtk_fixed_put (GTK_FIXED (fixed16), cher, 352, 120);
  gtk_widget_set_size_request (cher, 40, 34);

  image36 = gtk_image_new_from_stock ("gtk-find", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image36);
  gtk_container_add (GTK_CONTAINER (cher), image36);

  DISPOCH = gtk_button_new ();
  gtk_widget_show (DISPOCH);
  gtk_fixed_put (GTK_FIXED (fixed16), DISPOCH, 305, 120);
  gtk_widget_set_size_request (DISPOCH, 40, 34);

  image38 = gtk_image_new_from_stock ("gtk-refresh", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image38);
  gtk_container_add (GTK_CONTAINER (DISPOCH), image38);

  g_signal_connect ((gpointer) treeview5, "row_activated",
                    G_CALLBACK (on_treeview5_row_activated),
                    NULL);
  g_signal_connect ((gpointer) retourCHE, "clicked",
                    G_CALLBACK (on_retourCHE_clicked),
                    NULL);
  g_signal_connect ((gpointer) cher, "clicked",
                    G_CALLBACK (on_cher_clicked),
                    NULL);
  g_signal_connect ((gpointer) DISPOCH, "clicked",
                    G_CALLBACK (on_DISPOCH_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (f_chercher_capteur, f_chercher_capteur, "f_chercher_capteur");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, fixed16, "fixed16");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, label85, "label85");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, treeview5, "treeview5");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, label86, "label86");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, retourCHE, "retourCHE");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, alignment32, "alignment32");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, hbox32, "hbox32");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, image37, "image37");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, label87, "label87");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, REFERENCE, "REFERENCE");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, cher, "cher");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, image36, "image36");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, DISPOCH, "DISPOCH");
  GLADE_HOOKUP_OBJECT (f_chercher_capteur, image38, "image38");

  return f_chercher_capteur;
}

